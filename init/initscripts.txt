Starting jobs at boot
---------------------
Starting jobs at system boot is generally platform specific. RHEL and CentOS use
a traditional "sysvinit" mechanism, Ubuntu uses "upstart", and Mac OS X uses
"launchd". They are all featureful in their own ways. These are quick notes on
the minimum needed to run a daemon at boot on each one.

.Sometimes there's an easier way
*******************************************************************************
You might find my http://tkhanson.net/pmtr[pmtr tool] much easier to use than
writing your initscript. Initscripts are typically used to start low-level
services that are shipped with the operating system. 
*******************************************************************************

Detecting OS
~~~~~~~~~~~~
Specific distributions of Linux can be detected by looking for certain files.

 * RHEL/Centos: look for `/etc/redhat-release`
 * Debian: look for `/etc/debian_version`
 * Ubuntu: look for `/etc/lsb-release` and see if it contains Ubuntu

.exampled: the daemon to run
For the purposes of illustration, suppose we have a daemon - we'll call it
"exampled" (for example daemon).  It will be installed in this path,

  /usr/bin/exampled

We assume that `exampled` runs in the foreground (it does not fork and exit)
for the purposes of the job configuration below.

RHEL/CentOS
~~~~~~~~~~~
This platform uses sysvinit-style scripts. 

Place this in `/etc/rc.d/init.d/exampled`:

----------------------------------------------------------------
include::centos-exampled[]
----------------------------------------------------------------

Add the new script (internally this symlinks it to the various runlevels): 

  chkconfig --add exampled

This makes symlinks in the runlevel-specific directories.

Manually start up the job (on reboot, it should get started automatically):

  /etc/init.d/exampled start

Ubuntu
~~~~~~
This platform uses "upstart" to manage jobs. 

Place this in `/etc/init/exampled.conf`:

----------------------------------------------------------------
include::ubuntu-exampled.conf[]
----------------------------------------------------------------

It's all ready to go. First time start up is just:

  start exampled

Debian
~~~~~~
Place this in /etc/init.d/exampled:

----------------------------------------------------------------
include::debian-exampled.conf[]
----------------------------------------------------------------

Symlink things into place using:

  /usr/sbin/update-rc.d exampled defaults

Then start it up:

  service exampled start

Mac OS X
~~~~~~~~
Mac uses "launchd" to start daemons. 

Place this file in `/Library/LaunchDaemons/exampled.plist`:

----------------------------------------------------------------
include::mac-exampled.plist[]
----------------------------------------------------------------

Load it in like this:

  launchctl load /Library/LaunchDaemons/exampled.plist

Since we used the directive to start it upon load, it should already be running.

